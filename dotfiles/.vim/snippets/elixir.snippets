snippet def
	def ${1:name} do
	  ${2}
	end
snippet defmodule
	defmodule ${1:ModuleName} do
	  @moduledoc """${2}
	  """

	  def ${3:fun}(${4:args}) do
	    ${5}
	  end
	end
snippet def
	@doc """${2}
	"""
	@spec ${3}
	def ${1:fun}(${4:args}) do
	  ${5}
	end
snippet deftask
	defmodule Mix.Tasks.${1:TaskName} do
	  use Mix.Task

	  @shortdoc "${2:This is the description of the task}"

	  def run(args) do
	    ${3:Mix.shell.info "hello"}
	  end
	end
snippet doc
	@doc """
	${1}
	"""
snippet ectoschema
	defmodule ${1:SchemaName} do
	  use Ecto.Schema

	  schema "${2}" do
	    ${3}
	  end
	end
snippet fn
	fn(${1:args}) -> ${2} end
snippet i
	IO.inspect ${1}
snippet pry
	require IEx; IEx.pry
snippet test
	test "${1:test_name}" do
	  ${2}
	end
